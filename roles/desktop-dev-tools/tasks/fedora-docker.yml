---
- name: remove old docker packages
  ansible.builtin.dnf:
    state: absent
    name:
      - docker
      - docker-client
      - docker-client-latest
      - ocker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-selinux
      - docker-engine-selinux
      - docker-engine

- name: install pip3 package
  dnf:
    name: python3-pip

- name: install needed docker pip modules
  pip:
    name: docker
    extra_args: --user

- name: enable docker repository for docker
  shell: dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

- name: install docker for Fedora
  ansible.builtin.dnf:
    state: present
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

- name: configure docker options
  template:
    src: docker-daemon.json
    dest: /etc/docker/daemon.json
    backup: true
    mode: 0644

- name: add docker group members
  become: true
  user:
    name: "{{ lookup('env', 'USER') }}"
    groups: docker
    append: true

- name: create docker plugin directory
  ansible.builtin.file:
    path: "{{ docker_config }}/cli-plugins/"
    state: directory
    owner: root
    group: docker
    mode: 0775

- name: setup docker-compose binary
  ansible.builtin.get_url:
    url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
    dest: "{{ docker_config }}/cli-plugins/docker-compose"
    mode: a+x

- name: create docker-compose symbolic link 
  file:
   src: "{{ docker_config }}/cli-plugins/docker-compose"
   dest: "{{ docker_compose_bin }}"
   state: link

- name: start and enable service docker, if it's not
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
